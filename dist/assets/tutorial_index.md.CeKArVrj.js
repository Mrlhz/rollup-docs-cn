import{_ as k,b as e,e as s,x as o,aw as p,l as n,k as a,M as l,r as d,o as r}from"./chunks/framework.nT7dnMoH.js";const Fs=JSON.parse('{"title":"教程","description":"","frontmatter":{"title":"教程"},"headers":[],"relativePath":"tutorial/index.md","filePath":"tutorial/index.md"}'),E={name:"tutorial/index.md"},g={class:"language-js vp-adaptive-theme"},y={class:"shiki shiki-themes github-light github-dark vp-code twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0"},u={class:"line"},F={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},c={class:"line"},C={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},f={class:"line"},v={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},b={class:"line"},m={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},B={class:"language-js vp-adaptive-theme"},A={class:"shiki shiki-themes github-light github-dark vp-code twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0"},D={class:"line"},w={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},j={class:"line"},x={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},O={class:"line"},S={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},q={class:"line"},R={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},T={class:"line"},P={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},I={class:"line"},N={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},V={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},J={class:"language-js vp-adaptive-theme"},M={class:"shiki shiki-themes github-light github-dark vp-code twoslash lsp",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0"},$={class:"line"},L={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},Y={class:"line"},H={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},W={class:"line"},z={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},G={class:"line"},K={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},Q={class:"line"},U={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},X={class:"line"},Z={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},_={class:"line"},ss={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},is={class:"line"},as={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},ls={class:"line"},ts={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},ns={class:"line"},ps={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},hs={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},ks={class:"line"},es={style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},os={style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}};function ds(h,i,rs,Es,gs,ys){const t=d("v-menu");return r(),e("div",null,[s("h1",null,o(h.$frontmatter.title),1),i[175]||(i[175]=p(`<nav class="table-of-contents"><ul><li><a href="#creating-your-first-bundle">开始你的第一次打包</a></li><li><a href="#using-config-files">使用配置文件</a></li><li><a href="#installing-rollup-locally">本地安装 Rollup</a></li><li><a href="#using-plugins">使用插件</a></li><li><a href="#using-output-plugins">使用输出插件</a></li><li><a href="#code-splitting">代码分割</a></li></ul></nav><h2 id="creating-your-first-bundle" tabindex="-1">开始你的第一次打包 <a class="header-anchor" href="#creating-your-first-bundle" aria-label="Permalink to &quot;开始你的第一次打包 {#creating-your-first-bundle}&quot;">​</a></h2><p><em>在开始之前，你需要安装 <a href="https://nodejs.org" target="_blank" rel="noreferrer">Node.js</a> 以便使用 <a href="https://npmjs.com" target="_blank" rel="noreferrer">NPM</a>。你还需要知道如何在你的机器上访问 <a href="https://www.codecademy.com/learn/learn-the-command-line" target="_blank" rel="noreferrer">命令行</a>。</em></p><p>目前使用 Rollup 最简单的方法是通过命令行界面（CLI）操作。现在，我们将全局安装它（稍后我们将学习如何将它安装到你的项目中，以便你的构建过程具有可移植性，但暂时不用担心这个）。在命令行中输入以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rollup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or \`npm i rollup -g\` for short</span></span></code></pre></div><p>你现在可以运行 <code>rollup</code> 命令了，试一试吧！</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span></span></code></pre></div><p>因为没有传入参数，Rollup 会打印出使用说明。这和运行 <code>rollup --help</code>，或者 <code>rollup -h</code> 相同。</p><p>让我们创建一个简单的项目：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-rollup-project/src</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-rollup-project</span></span></code></pre></div><p>首先，我们需要一个 <em>入口</em>。将这段代码复制到一个名为 <code>src/main.js</code> 的新文件中：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/main.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./foo.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foo);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>接下来，让我们创建一个名为 <code>foo.js</code> 的模块，它在入口文件中被导入：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/foo.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hello world!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>现在我们已经准备好进行一次打包：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cjs</span></span></code></pre></div><p><code>-f</code> 选项 (是 <code>--format</code> 的缩写) 指定了产物的类型 — 在本例中是 CommonJS (可以在 Node.js 中运行)。因为我们没有指定输出文件，所以它将直接打印到 <code>stdout</code>：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> foo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hello world!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foo);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> main;</span></span></code></pre></div><p>你也可以像这样将产物保存为文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bundle.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cjs</span></span></code></pre></div><p>（你也可以使用 <code>rollup src/main.js -f cjs &gt; bundle.js</code>，但是后面我们会看到，如果你需要生成 sourcemaps 的话，这种方式的灵活性会更低。）</p><p>尝试运行这段代码：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>node</span></span>
<span class="line"><span>&gt; var myBundle = require(&#39;./bundle.js&#39;);</span></span>
<span class="line"><span>&gt; myBundle();</span></span>
<span class="line"><span>&#39;hello world!&#39;</span></span></code></pre></div><p>恭喜！你已经使用 Rollup 完成了一次打包！</p><h2 id="using-config-files" tabindex="-1">使用配置文件 <a class="header-anchor" href="#using-config-files" aria-label="Permalink to &quot;使用配置文件 {#using-config-files}&quot;">​</a></h2><p>到目前为止，一切都很好，但随着我们添加更多选项，输入命令会变得有点麻烦。</p><p>为了避免重复输入，我们可以创建一个包含所有必要选项的配置文件。配置文件是用 JavaScript 编写的，比原始的 CLI 更加灵活。</p><p>在项目根目录中创建一个名为 <code>rollup.config.mjs</code> 的文件，并添加以下代码：</p>`,28)),s("div",g,[i[29]||(i[29]=s("button",{title:"Copy Code",class:"copy"},null,-1)),i[30]||(i[30]=s("span",{class:"lang"},"js",-1)),s("pre",y,[s("code",null,[i[21]||(i[21]=p(`<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// rollup.config.mjs</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
`,4)),s("span",u,[i[2]||(i[2]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	",-1)),s("span",F,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[0]||(i[0]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"InputOptions.input"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," InputOption "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[1]||(i[1]=s("span",null,"input",-1))]),_:1})]),i[3]||(i[3]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[4]||(i[4]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src/main.js'",-1)),i[5]||(i[5]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[22]||(i[22]=l(`
`)),s("span",c,[i[8]||(i[8]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	",-1)),s("span",C,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[6]||(i[6]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"RollupOptions.output"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," OutputOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," OutputOptions[] "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[7]||(i[7]=s("span",null,"output",-1))]),_:1})]),i[9]||(i[9]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {",-1))]),i[23]||(i[23]=l(`
`)),s("span",f,[i[12]||(i[12]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		",-1)),s("span",v,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[10]||(i[10]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.file"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," string "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[11]||(i[11]=s("span",null,"file",-1))]),_:1})]),i[13]||(i[13]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[14]||(i[14]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'bundle.js'",-1)),i[15]||(i[15]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[24]||(i[24]=l(`
`)),s("span",b,[i[18]||(i[18]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		",-1)),s("span",m,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[16]||(i[16]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.format"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ModuleFormat "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[17]||(i[17]=s("span",null,"format",-1))]),_:1})]),i[19]||(i[19]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[20]||(i[20]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'cjs'",-1))]),i[25]||(i[25]=l(`
`)),i[26]||(i[26]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	}")],-1)),i[27]||(i[27]=l(`
`)),i[28]||(i[28]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")],-1))])])]),i[176]||(i[176]=p(`<p>(你也可以使用 CJS 模块，例如 <code>module.exports = {/* config */}</code>)</p><p>使用配置文件, 我们使用 <code>--config</code> 或者 <code>-c</code> ：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bundle.js</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 删除它我们可以检查命令是否正常！</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span></span></code></pre></div><p>你可以使用等效的命令行选项覆盖配置文件中的任何选项：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bundle-2.js</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # \`-o\` 等价于 \`--file\`（曾用名为 &quot;output&quot;）</span></span></code></pre></div><p><em>注意：Rollup 本身会处理配置文件，这就是为什么我们可以使用 <code>export default</code> 语法的原因 – 代码没有被 Babel 或任何类似的工具转换，因此你只能使用在你当前使用的 Node 版本中支持的 ES2015 功能。</em></p><p>如果你想，你也可以选择指定不同于默认的 <code>rollup.config.mjs</code> 的配置文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rollup.config.dev.mjs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rollup.config.prod.mjs</span></span></code></pre></div><h2 id="installing-rollup-locally" tabindex="-1">本地安装 Rollup <a class="header-anchor" href="#installing-rollup-locally" aria-label="Permalink to &quot;本地安装 Rollup {#installing-rollup-locally}&quot;">​</a></h2><p>在团队或分布式环境中工作时，将 Rollup 添加为 <em>本地</em> 依赖可能是明智的选择。本地安装 Rollup 可以避免多个贡献者单独安装 Rollup 的额外步骤，并确保所有贡献者使用相同版本的 Rollup。</p><p>用 NPM 安装 Rollup 到本地：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rollup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div><p>或者使用 Yarn：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rollup</span></span></code></pre></div><p>安装完成后, Rollup 可以在项目的根目录中运行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rollup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span></span></code></pre></div><p>或者使用 Yarn：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rollup</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span></span></code></pre></div><p>安装完成后，通常会在 <code>package.json</code> 中添加一个单一的构建脚本，为所有贡献者提供方便的命令。例如：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		&quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rollup --config&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><em>注意：一旦本地安装完成，当运行脚本命令时，不管是 NPM 还是 Yarn 都可以找到 Rollup 的可执行文件并执行。</em></p><h2 id="using-plugins" tabindex="-1">使用插件 <a class="header-anchor" href="#using-plugins" aria-label="Permalink to &quot;使用插件 {#using-plugins}&quot;">​</a></h2><p>到目前为止，我们已经用入口文件和通过相对路径导入的模块打了一个简单的包。随着你需要打包更复杂的代码，通常需要更灵活的配置，例如导入使用 NPM 安装的模块、使用 Babel 编译代码、处理 JSON 文件等等。</p><p>为此，我们使用 <em>插件</em>，在捆绑过程的关键点更改 Rollup 的行为。一个很棒的插件列表保存在 <a href="https://github.com/rollup/awesome" target="_blank" rel="noreferrer">the Rollup Awesome List</a>。</p><p>在本教程中，我们将使用 <a href="https://github.com/rollup/plugins/tree/master/packages/json" target="_blank" rel="noreferrer">@rollup/plugin-json</a>，它允许 Rollup 从 JSON 文件中导入数据。</p><p>在项目根目录中创建一个名为 <code>package.json</code> 的文件，并添加以下内容：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rollup-tutorial&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	&quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		&quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rollup -c&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>将 @rollup/plugin-json 安装到开发依赖中：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rollup/plugin-json</span></span></code></pre></div><p>(我们使用 <code>--save-dev</code> 而不是 <code>--save</code>，因为我们的代码在运行时实际上不依赖于插件，只有在打包时才需要。)</p><p>更新你的 <code>src/main.js</code> 文件，使其从 <code>package.json</code> 导入而不是 <code>src/foo.js</code>：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/main.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { version } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;../package.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;version &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> version);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在 <code>rollup.config.mjs</code> 文件中加入 JSON plugin：</p>`,33)),s("div",B,[i[78]||(i[78]=s("button",{title:"Copy Code",class:"copy"},null,-1)),i[79]||(i[79]=s("span",{class:"lang"},"js",-1)),s("pre",A,[s("code",null,[i[67]||(i[67]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// rollup.config.mjs")],-1)),i[68]||(i[68]=l(`
`)),s("span",D,[i[33]||(i[33]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import",-1)),i[34]||(i[34]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ",-1)),s("span",w,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[31]||(i[31]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," json"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," RollupJsonOptions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Plugin")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Convert .json files to ES6 modules")])],-1)])),default:a(()=>[i[32]||(i[32]=s("span",null,"json",-1))]),_:1})]),i[35]||(i[35]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ",-1)),i[36]||(i[36]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from",-1)),i[37]||(i[37]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '@rollup/plugin-json'",-1)),i[38]||(i[38]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";",-1))]),i[69]||(i[69]=p(`
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
`,5)),s("span",j,[i[41]||(i[41]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	",-1)),s("span",x,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[39]||(i[39]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"InputOptions.input"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," InputOption "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[40]||(i[40]=s("span",null,"input",-1))]),_:1})]),i[42]||(i[42]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[43]||(i[43]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src/main.js'",-1)),i[44]||(i[44]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[70]||(i[70]=l(`
`)),s("span",O,[i[47]||(i[47]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	",-1)),s("span",S,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[45]||(i[45]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"RollupOptions.output"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," OutputOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," OutputOptions[] "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[46]||(i[46]=s("span",null,"output",-1))]),_:1})]),i[48]||(i[48]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {",-1))]),i[71]||(i[71]=l(`
`)),s("span",q,[i[51]||(i[51]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		",-1)),s("span",R,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[49]||(i[49]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.file"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," string "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[50]||(i[50]=s("span",null,"file",-1))]),_:1})]),i[52]||(i[52]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[53]||(i[53]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'bundle.js'",-1)),i[54]||(i[54]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[72]||(i[72]=l(`
`)),s("span",T,[i[57]||(i[57]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		",-1)),s("span",P,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[55]||(i[55]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.format"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ModuleFormat "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[56]||(i[56]=s("span",null,"format",-1))]),_:1})]),i[58]||(i[58]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[59]||(i[59]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'cjs'",-1))]),i[73]||(i[73]=l(`
`)),i[74]||(i[74]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	},")],-1)),i[75]||(i[75]=l(`
`)),s("span",I,[i[64]||(i[64]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	",-1)),s("span",N,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[60]||(i[60]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"InputOptions.plugins"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," InputPluginOption")])],-1)])),default:a(()=>[i[61]||(i[61]=s("span",null,"plugins",-1))]),_:1})]),i[65]||(i[65]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": [",-1)),s("span",V,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[62]||(i[62]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," json"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," RollupJsonOptions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Plugin")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Convert .json files to ES6 modules")])],-1)])),default:a(()=>[i[63]||(i[63]=s("span",null,"json",-1))]),_:1})]),i[66]||(i[66]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()]",-1))]),i[76]||(i[76]=l(`
`)),i[77]||(i[77]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")],-1))])])]),i[177]||(i[177]=p(`<p>使用 <code>npm run build</code> 运行 Rollup。结果应该如下所示：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;1.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;version &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> version);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> main;</span></span></code></pre></div><p><em>注意：结果中只导入了我们实际需要的数据 ——<code>name</code>、<code>devDependencies</code> 和 <code>package.json</code> 中其他内容都被忽略了。这就是 <strong>除屑优化</strong> 的作用。</em></p><h2 id="using-output-plugins" tabindex="-1">使用输出插件 <a class="header-anchor" href="#using-output-plugins" aria-label="Permalink to &quot;使用输出插件 {#using-output-plugins}&quot;">​</a></h2><p>某些插件也可以专门应用于某些输出。有关特定输出插件可以做什么的详细信息，请参见 <a href="./../plugin-development/#build-hooks">插件钩子</a>。简而言之，这些插件只能在 Rollup 的主要分析完成后修改代码。如果使用不兼容的插件作为特定输出插件，Rollup 将会发出警告。一个可能的用例是压缩产物以在浏览器中使用。</p><p>让我们扩展上一个示例，提供一个最小化的构建和一个非最小化的构建。为此，我们需要安装 <code>@rollup/plugin-terser</code>：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @rollup/plugin-terser</span></span></code></pre></div><p>编辑你的 <code>rollup.config.mjs</code> 文件，添加另一个最小化压缩的输出。我们选择 <code>iife</code> 作为格式。该格式会将代码封装起来，以便可以通过浏览器中的 <code>script</code> 标签使用，同时避免与其他代码产生不必要的交互。由于设置了一个导出，因此我们需要提供一个全局变量的名称，该变量将由我们的产物创建，以便其他代码可以通过此变量访问我们的导出。</p>`,8)),s("div",J,[i[173]||(i[173]=s("button",{title:"Copy Code",class:"copy"},null,-1)),i[174]||(i[174]=s("span",{class:"lang"},"js",-1)),s("pre",M,[s("code",null,[i[149]||(i[149]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// rollup.config.mjs")],-1)),i[150]||(i[150]=l(`
`)),s("span",$,[i[82]||(i[82]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import",-1)),i[83]||(i[83]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ",-1)),s("span",L,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[80]||(i[80]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," json"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," RollupJsonOptions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Plugin")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Convert .json files to ES6 modules")])],-1)])),default:a(()=>[i[81]||(i[81]=s("span",null,"json",-1))]),_:1})]),i[84]||(i[84]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ",-1)),i[85]||(i[85]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from",-1)),i[86]||(i[86]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '@rollup/plugin-json'",-1)),i[87]||(i[87]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";",-1))]),i[151]||(i[151]=l(`
`)),s("span",Y,[i[90]||(i[90]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import",-1)),i[91]||(i[91]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ",-1)),s("span",H,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[88]||(i[88]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," terser"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Options"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Plugin")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"A Rollup plugin to generate a minified output bundle.")]),s("div",{class:"twoslash-popup-docs twoslash-popup-docs-tags vp-doc"},[s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@param"),s("span",{class:"twoslash-popup-docs-tag-value"},[s("code",null,"options"),l("  - Plugin options.")])]),s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@returns"),s("span",{class:"twoslash-popup-docs-tag-value"},"Plugin instance.")])])],-1)])),default:a(()=>[i[89]||(i[89]=s("span",null,"terser",-1))]),_:1})]),i[92]||(i[92]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ",-1)),i[93]||(i[93]=s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from",-1)),i[94]||(i[94]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," '@rollup/plugin-terser'",-1)),i[95]||(i[95]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";",-1))]),i[152]||(i[152]=p(`
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
`,5)),s("span",W,[i[98]||(i[98]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	",-1)),s("span",z,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[96]||(i[96]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"InputOptions.input"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," InputOption "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[97]||(i[97]=s("span",null,"input",-1))]),_:1})]),i[99]||(i[99]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[100]||(i[100]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'src/main.js'",-1)),i[101]||(i[101]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[153]||(i[153]=l(`
`)),s("span",G,[i[104]||(i[104]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	",-1)),s("span",K,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[102]||(i[102]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"RollupOptions.output"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," OutputOptions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," OutputOptions[] "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[103]||(i[103]=s("span",null,"output",-1))]),_:1})]),i[105]||(i[105]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": [",-1))]),i[154]||(i[154]=l(`
`)),i[155]||(i[155]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		{")],-1)),i[156]||(i[156]=l(`
`)),s("span",Q,[i[108]||(i[108]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"			",-1)),s("span",U,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[106]||(i[106]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.file"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," string "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[107]||(i[107]=s("span",null,"file",-1))]),_:1})]),i[109]||(i[109]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[110]||(i[110]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'bundle.js'",-1)),i[111]||(i[111]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[157]||(i[157]=l(`
`)),s("span",X,[i[114]||(i[114]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"			",-1)),s("span",Z,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[112]||(i[112]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.format"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ModuleFormat "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[113]||(i[113]=s("span",null,"format",-1))]),_:1})]),i[115]||(i[115]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[116]||(i[116]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'cjs'",-1))]),i[158]||(i[158]=l(`
`)),i[159]||(i[159]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		},")],-1)),i[160]||(i[160]=l(`
`)),i[161]||(i[161]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		{")],-1)),i[162]||(i[162]=l(`
`)),s("span",_,[i[119]||(i[119]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"			",-1)),s("span",ss,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[117]||(i[117]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.file"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," string "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[118]||(i[118]=s("span",null,"file",-1))]),_:1})]),i[120]||(i[120]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[121]||(i[121]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'bundle.min.js'",-1)),i[122]||(i[122]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[163]||(i[163]=l(`
`)),s("span",is,[i[125]||(i[125]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"			",-1)),s("span",as,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[123]||(i[123]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.format"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ModuleFormat "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[124]||(i[124]=s("span",null,"format",-1))]),_:1})]),i[126]||(i[126]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[127]||(i[127]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'iife'",-1)),i[128]||(i[128]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[164]||(i[164]=l(`
`)),s("span",ls,[i[131]||(i[131]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"			",-1)),s("span",ts,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[129]||(i[129]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.name"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," string "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," undefined")])],-1)])),default:a(()=>[i[130]||(i[130]=s("span",null,"name",-1))]),_:1})]),i[132]||(i[132]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": ",-1)),i[133]||(i[133]=s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'version'",-1)),i[134]||(i[134]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",",-1))]),i[165]||(i[165]=l(`
`)),s("span",ns,[i[139]||(i[139]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"			",-1)),s("span",ps,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[135]||(i[135]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"OutputOptions.plugins"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," OutputPluginOption")])],-1)])),default:a(()=>[i[136]||(i[136]=s("span",null,"plugins",-1))]),_:1})]),i[140]||(i[140]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": [",-1)),s("span",hs,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[137]||(i[137]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," terser"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Options"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Plugin")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"A Rollup plugin to generate a minified output bundle.")]),s("div",{class:"twoslash-popup-docs twoslash-popup-docs-tags vp-doc"},[s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@param"),s("span",{class:"twoslash-popup-docs-tag-value"},[s("code",null,"options"),l("  - Plugin options.")])]),s("span",{class:"twoslash-popup-docs-tag"},[s("span",{class:"twoslash-popup-docs-tag-name"},"@returns"),s("span",{class:"twoslash-popup-docs-tag-value"},"Plugin instance.")])])],-1)])),default:a(()=>[i[138]||(i[138]=s("span",null,"terser",-1))]),_:1})]),i[141]||(i[141]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()]",-1))]),i[166]||(i[166]=l(`
`)),i[167]||(i[167]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"		}")],-1)),i[168]||(i[168]=l(`
`)),i[169]||(i[169]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	],")],-1)),i[170]||(i[170]=l(`
`)),s("span",ks,[i[146]||(i[146]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"	",-1)),s("span",es,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[142]||(i[142]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"InputOptions.plugins"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," InputPluginOption")])],-1)])),default:a(()=>[i[143]||(i[143]=s("span",null,"plugins",-1))]),_:1})]),i[147]||(i[147]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": [",-1)),s("span",os,[n(t,{class:"twoslash-hover","popper-class":"shiki twoslash-floating vp-copy-ignore vp-code",theme:"twoslash"},{popper:a(({})=>i[144]||(i[144]=[s("span",{class:"twoslash-popup-container vp-copy-ignore"},[s("code",{class:"twoslash-popup-code"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"function"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," json"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"options"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"?:"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," RollupJsonOptions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Plugin")]),s("div",{class:"twoslash-popup-docs vp-doc"},[s("p",null,"Convert .json files to ES6 modules")])],-1)])),default:a(()=>[i[145]||(i[145]=s("span",null,"json",-1))]),_:1})]),i[148]||(i[148]=s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()]",-1))]),i[171]||(i[171]=l(`
`)),i[172]||(i[172]=s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")],-1))])])]),i[178]||(i[178]=p(`<p>除了 <code>bundle.js</code>，Rollup 现在还将创建第二个文件 <code>bundle.min.js</code>：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;1.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;version &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> n);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre></div><h2 id="code-splitting" tabindex="-1">代码分割 <a class="header-anchor" href="#code-splitting" aria-label="Permalink to &quot;代码分割 {#code-splitting}&quot;">​</a></h2><p>代码分割是指有些情况下 Rollup 会自动将代码拆分成块，例如动态加载或多个入口点，还有一种方法可以显式地告诉 Rollup 将哪些模块拆分成单独的块，这是通过 <a href="./../configuration-options/#output-manualchunks"><code>output.manualChunks</code></a> 选项实现的。</p><p>要使用代码分割功能实现惰性动态加载（其中某些导入的模块仅在执行函数后加载），我们返回到原始示例，并修改 <code>src/main.js</code>，以动态加载 <code>src/foo.js</code> 而不是静态加载：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/main.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./foo.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foo));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Rollup 将使用动态导入创建一个仅在需要时加载的单独块。为了让 Rollup 知道在哪里放置第二个块，我们不使用 <code>--file</code> 选项，而是使用 <code>--dir</code> 选项设置一个输出文件夹：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cjs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist</span></span></code></pre></div><p>这将创建一个名为 <code>dist</code> 的文件夹，其中包含两个文件，<code>main.js</code> 和 <code>chunk-[hash].js</code>, 其中 <code>[hash]</code> 是基于内容的哈希字符串。你可以通过指定 <a href="./../configuration-options/#output-chunkfilenames"><code>output.chunkFileNames</code></a> 和 <a href="./../configuration-options/#output-entryfilenames"><code>output.entryFileNames</code></a> 选项来提供自己的命名模式。</p><p>你仍然可以像以前一样运行你的代码，并且具有相同的输出，尽管会慢一些，因为加载和解析 <code>./foo.js</code> 仅在我们第一次调用导出的函数时才开始。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;require(&#39;./dist/main.js&#39;)()&quot;</span></span></code></pre></div><p>如果我们不使用 <code>--dir</code> 选项，Rollup 将再次将块打印到 <code>stdout</code>，并添加注释以突出显示块的边界：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//→ main.js:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./chunk-b8774ea3.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foo)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> main;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//→ chunk-b8774ea3.js:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hello world!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.default </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo;</span></span></code></pre></div><p>如果你想要在使用耗时很长的功能之前仅加载和解析它们一次，则此方法非常有用。</p><p>代码分割的另一个用途是能够指定共享一些依赖项的多个入口点。我们再次扩展我们的示例，添加一个名为 <code>src/main2.js</code> 的第二个入口点，它静态导入 <code>src/foo.js</code>，就像我们在原始示例中所做的那样：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/main2.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./foo.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foo);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果我们给 Rollup 提供了两个入口，那么会创建三个块：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main.js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main2.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cjs</span></span></code></pre></div><p>输出为</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//→ main.js:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./chunk-b8774ea3.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foo)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> main;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//→ main2.js:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo_js </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./chunk-b8774ea3.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(foo_js.default);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> main2;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//→ chunk-b8774ea3.js:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hello world!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.default </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foo;</span></span></code></pre></div><p>请注意两个入口点都导入了相同的共享块。Rollup 永远不会复制代码，而是创建额外的块，仅加载必要的最少量。同样，通过传递 <code>--dir</code> 选项，将文件写入磁盘。</p><p>你可以通过原生的 ES 模块、AMD 加载器或 SystemJS，为浏览器构建相同的代码。</p><p>例如，使用 <code>-f es</code> 选项进行原生模块构建：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main.js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main2.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> es</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">doctype</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> main2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./dist/main2.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	main2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>或者，使用 <code>-f system</code> 选项进行 SystemJS 构建：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rollup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main.js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/main2.js</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dist</span></span></code></pre></div><p>通过以下方式安装 SystemJS</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemjs</span></span></code></pre></div><p>然后根据需要在 HTML 页面中加载一个或两个入口点：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">doctype</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;node_modules/systemjs/dist/s.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./dist/main2.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>请参考 <a href="https://github.com/rollup/rollup-starter-code-splitting" target="_blank" rel="noreferrer">rollup-starter-code-splitting</a> 示例，了解如何在支持原生 ES 模块的浏览器上设置使用它们的 Web 应用程序，并在必要时回退到 SystemJS。</p>`,32))])}const cs=k(E,[["render",ds]]);export{Fs as __pageData,cs as default};
